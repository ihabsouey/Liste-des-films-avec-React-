{"version":3,"sources":["components/Table.js","components/Search.js","components/Affiche.js","components/TableDetails.js","components/Details.js","App.js","reportWebVitals.js","index.js"],"names":["Table","props","films","className","class","src","alt","href","map","film","title","backdrop_path","to","id","Search","useState","query","setQuery","setFilms","API","React","useEffect","fetch","then","res","json","f","results","width","type","value","onChange","e","target","Affiche","TableDetails","budget","homepage","imdb_id","original_language","original_title","overview","popularity","poster_path","production_companies","comp","name","production_countries","count","genres","genre","release_date","revenue","runtime","spoken_languages","lang","english_name","status","vote_average","vote_count","tagline","height","video_url","frameBorder","allow","allowFullScreen","Details","setFilm","useParams","API_VIDEO","_f","_film","key","catch","error","console","log","App","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4NA4BeA,EAzBD,SAACC,GACX,IAAMC,EAAQD,EAAMC,MACpB,OAGiB,sBAAKC,UAAU,aAAf,sBAAqC,0BAASC,MAAM,YAAf,UAA2B,oBAAIA,MAAM,aAAV,yBAAuC,qBAAKA,MAAM,aAAaC,IAAI,mEAAmEC,IAAI,eAAc,oBAAGC,KAAK,kBAAR,UAA0B,wBAAQH,MAAM,4BAAd,mCAA1B,UAExNF,EAAMM,KAAI,SAACC,GAAD,OACLA,EAAKC,OACH,0BAASN,MAAM,YAAf,UAEE,qBAAID,UAAU,aAAd,cAA6BM,EAAKC,SACpC,qBAAKP,UAAU,aAAaE,IAAK,mCAAqCI,EAAKE,cAAgBL,IAAKG,EAAKC,QAC9F,eAAC,IAAD,CAAME,GAAI,YAAYH,EAAKI,GAA3B,UACI,wBAAQV,UAAU,4BAAlB,mCADJ,iBCuCpBW,MApDf,WACI,MAAyBC,mBAAS,IAAlC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAyBF,mBAAS,IAAlC,mBAAOb,EAAP,KAAagB,EAAb,KACMC,EAAG,+GAA2GH,EAA3G,+BAYT,OAXAI,IAAMC,WAAU,WACZC,MAAMH,GACLI,MAAK,SAACC,GACH,OAAOA,EAAIC,UAEdF,MAAK,SAACG,GACHR,EAASQ,EAAEC,cAEjB,CAACR,EAAIH,IAIH,sBAAKb,UAAU,YAAf,UACG,uBAAK,uBAEJ,cAAC,IAAD,CAAMS,GAAG,IAAT,SACQ,wBAAQT,UAAU,kBAAkBU,GAAG,OAAvC,SAEA,qBAAKR,IAAI,4DAA4DuB,MAAM,KAAKtB,IAAI,+BAIxF,sBAAKH,UAAU,KAAf,eAAsB,uBAClB,sBAAKC,MAAM,kCAAX,UACI,qBAAKA,MAAM,sBAAX,SACA,sBAAMA,MAAM,qCAAqCS,GAAG,uBAApD,uCAEA,uBAAOgB,KAAK,OAAOzB,MAAM,eAAe,aAAW,QAAQ,mBAAiB,uBAAwB0B,MAAOd,EAAOe,SAAU,SAACC,GAAD,OAAKf,EAASe,EAAEC,OAAOH,gBAI3J,uBAnBR,IAmBc,uBACJ5B,GAEE,cAAC,EAAD,CAAOA,MAAOA,KAGdA,GAEC,mD,YCVNgC,MA7Bf,WACI,IACA,EAAyBd,IAAML,SAAS,IAAxC,mBAAOb,EAAP,KAAagB,EAAb,KAYA,OAVAG,qBAAU,WACNC,MAJa,0GAKZC,MAAK,SAACC,GACH,OAAOA,EAAIC,UAEdF,MAAK,SAACd,GACHS,EAAST,EAAKkB,cAEpB,IAGE,sBAAKxB,UAAU,YAAf,UACA,uBAAK,uBACL,eAAC,IAAD,CAAMS,GAAG,UAAT,UACA,yBAAQT,UAAU,kBAAkBU,GAAG,OAAvC,qCAEI,qBAAKR,IAAI,8DAA8DuB,MAAM,KAAKtB,IAAI,8BAH1F,OAKI,+DACE,cAAC,EAAD,CAAOJ,MAAOA,Q,OCqHbiC,EAjJM,SAAClC,GAClB,IAAMQ,EAAOR,EAAMQ,KACnB,OAES,sBAAKN,UAAU,YAAf,UACF,4DAA4BM,EAAKC,MAAjC,QACA,uBACA,uBAAOP,UAAU,uBAAuBU,GAAG,UAA3C,SACA,kCAEA,+BACI,wCACA,mCAAK,qBAAKR,IAAK,mCAAqCI,EAAKE,cAAgBL,IAAK,WAGjF,+BACG,yCACA,mCAAMG,EAAK2B,OAAX,UAEJ,+BACI,uCACA,mCAAK,oBAAG7B,KAAME,EAAK4B,SAAd,cAA2B5B,EAAK4B,SAAhC,aAET,+BACI,qCACA,mCAAM5B,EAAKI,GAAX,UAEJ,+BACI,0CACA,mCAAMJ,EAAK6B,QAAX,UAEJ,+BACI,oDACA,mCAAM7B,EAAK8B,kBAAX,UAEJ,+BACI,iDACA,mCAAM9B,EAAK+B,eAAX,UAEJ,+BACI,2CACA,mCAAM/B,EAAKgC,SAAX,UAEJ,+BACI,6CACA,mCAAMhC,EAAKiC,WAAX,UAEJ,+BACI,yCACA,6BACA,qBAAKrC,IAAK,mCAAqCI,EAAKkC,YAAarC,IAAK,sBAK1E,+BACI,wDACA,6BAAI,oCAEKG,QAFL,IAEKA,OAFL,EAEKA,EAAMmC,qBAAqBpC,KAAI,SAACqC,GAAD,OAC5B,mCAAOA,EAAKC,kBAM5B,+BACI,wDACA,6BAAI,oCAEKrC,QAFL,IAEKA,OAFL,EAEKA,EAAMsC,qBAAqBvC,KAAI,SAACwC,GAAD,OAC5B,mCAAMA,EAAMF,kBAM5B,+BACI,0CACA,6BAAI,oCAEKrC,QAFL,IAEKA,OAFL,EAEKA,EAAMwC,OAAOzC,KAAI,SAAC0C,GAAD,OACd,mCAAMA,EAAMJ,kBAO5B,+BACI,+CACA,mCAAMrC,EAAK0C,aAAX,UAEJ,+BACI,0CACA,mCAAM1C,EAAK2C,QAAX,UAEJ,+BACI,0CACA,mCAAM3C,EAAK4C,QAAX,UAEJ,+BACI,oDACA,6BAAI,oCAEK5C,QAFL,IAEKA,OAFL,EAEKA,EAAM6C,iBAAiB9C,KAAI,SAAC+C,GAAD,OACxB,mCAAMA,EAAKC,0BAM3B,+BACI,yCACA,mCAAM/C,EAAKgD,OAAX,UAEJ,+BACI,+CACA,mCAAMhD,EAAKiD,aAAX,UAEJ,+BACI,6CACA,mCAAMjD,EAAKkD,WAAX,UAEJ,+BACI,0CACA,mCAAMlD,EAAKmD,QAAX,eAIS,iDAGR,wBAAQhC,MAAM,MAAMiC,OAAO,MAAMxD,IAAK,iCAAiCI,EAAKqD,UAC5EC,YAAY,KACZC,MAAM,4BACNC,iBAAe,EACfvD,MAAM,cC5FPwD,MA3Cf,WACI,MAAuB9C,IAAML,SAAS,MAAtC,mBAAON,EAAP,KAAY0D,EAAZ,KAEMhD,EAAK,sCADEiD,cAANvD,GAC6C,wDAqBpD,OAnBAQ,qBAAU,WACNC,MAAMH,GACLI,MAAK,SAACC,GACH,OAAOA,EAAIC,UAEdF,MAAK,SAACG,GACC,IAAM2C,EAAS,6CAAyC3C,EAAEb,GAA3C,gEACfS,MAAM+C,GACL9C,MAAK,SAACC,GACH,OAAOA,EAAIC,UACZF,MAAK,SAAC+C,GAAM,IAAD,EACNC,EAAQ7C,EACZ6C,EAAMT,UAAN,OAAkBQ,QAAlB,IAAkBA,GAAlB,UAAkBA,EAAI3C,QAAQ,UAA9B,aAAkB,EAAgB6C,IAClCL,EAAQI,MACTE,OAAO,SAAAC,YAGpB,CAACvD,IACHwD,QAAQC,IAAInE,GACRA,EAID,sBAAKN,UAAU,YAAf,UACI,uBAAK,uBACL,eAAC,IAAD,CAAMS,GAAG,IAAT,UACH,yBAAQT,UAAU,kBAAkBU,GAAG,OAAvC,gCAEI,qBAAKR,IAAI,4DAA4DuB,MAAM,KAAKtB,IAAI,8BAHrF,OAKA,cAAC,EAAD,CAAcG,KAAMA,OAVhB,mDCXAoE,MAZf,WACE,OACE,qBAAK1E,UAAU,MAAf,SACC,eAAC,IAAD,WACG,cAAC,IAAD,CAAQ2E,OAAK,EAACC,KAAK,IAAIC,UAAW9C,IAClC,cAAC,IAAD,CAAO4C,OAAK,EAACC,KAAK,UAAUC,UAAWlE,IACvC,cAAC,IAAD,CAAOgE,OAAK,EAACC,KAAK,eAAeC,UAAWd,UCArCe,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB5D,MAAK,YAAkD,IAA/C6D,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.339cc04a.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Table = (props) => {\r\n    const films = props.films ;\r\n    return (\r\n       \r\n          \r\n                     <div className=\"container2\">         <article class=\"film-card\"><h4 class=\"film-title\"> Friendzone</h4><img class=\"film-image\" src=\"https://image.tmdb.org/t/p/w500//8Df8Wsstu76Wr8cTPfNHrSveVe6.jpg\" alt=\"Friendzone\"/><a href=\"/details/869617\"><button class=\"btn btn-primary film-text\">Voire plus détails</button> </a></article>\r\n      \r\n                    {films.map((film) => (\r\n                        ( film.title && ( \r\n                            <article class=\"film-card\">\r\n                        \r\n                              <h4 className=\"film-title\"> {film.title}</h4>  \r\n                            <img className=\"film-image\" src={\"https://image.tmdb.org/t/p/w500/\" + film.backdrop_path } alt={film.title} /> \r\n                                   <Link to={\"/details/\"+film.id} >\r\n                                       <button className=\"btn btn-primary film-text\" >Voire plus détails</button> </Link>  \r\n                                       </article>   \r\n                          ))  \r\n                    ))}\r\n                    </div>\r\n                 \r\n        \r\n        \r\n    );\r\n};\r\n\r\nexport default Table;","import React, { useState } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport Table from \"../components/Table\"\r\nfunction Search() {\r\n    const [query,setQuery] = useState('')\r\n    const [films,setFilms] = useState([])\r\n    const API = `https://api.themoviedb.org/3/search/multi?api_key=e3e3d29c3d379923c3ef3321c35b73c0&language=fr&query=${query}&page=1&include_adult=false`\r\n    React.useEffect(() => {\r\n        fetch(API)\r\n        .then((res)=> {\r\n            return res.json()\r\n        })\r\n        .then((f)=>{\r\n            setFilms(f.results)\r\n        })\r\n    },[API,query])\r\n\r\n    \r\n    return (\r\n        <div className=\"container\">\r\n           <br/><br/>\r\n          \r\n            <Link to=\"/\" > \r\n                    <button className=\"btn btn-primary\" id=\"btnr\">\r\n                    \r\n                    <img src=\"https://www.freeiconspng.com/uploads/home-page-icon-0.png\" width=\"35\" alt=\"Search Free Icon Image\" /> \r\n                    </button>\r\n                </Link>\r\n              \r\n                <div className=\"ss\">  <br/>\r\n                    <div class=\"input-group input-group-sm mb-3\" >\r\n                        <div class=\"input-group-prepend\">\r\n                        <span class=\"input-group-text btn btn-secondary\" id=\"inputGroup-sizing-sm\"> Tapez le nom du film :</span>\r\n                        </div>\r\n                        <input type=\"text\" class=\"form-control\" aria-label=\"Small\" aria-describedby=\"inputGroup-sizing-sm\"  value={query} onChange={(e)=>setQuery(e.target.value)}/>\r\n                    </div> \r\n                    </div>\r\n             \r\n                <br/> <br/>\r\n                { films && \r\n                 \r\n                    <Table films={films}/>\r\n                \r\n                }\r\n                 { !films && \r\n                \r\n                     <h2> Loading ... </h2>\r\n              \r\n                }\r\n           \r\n           \r\n        </div>\r\n\r\n    )\r\n}\r\nexport default Search\r\n","import React, { useEffect } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport Table from \"../components/Table\"\r\n\r\nimport '../App.css';\r\nimport \"../../node_modules/bootstrap/dist/css/bootstrap.min.css\";\r\n \r\nfunction Affiche () {\r\n    const API_LIST = 'https://api.themoviedb.org/3/movie/popular?api_key=e3e3d29c3d379923c3ef3321c35b73c0&language=fr&page=1'\r\n    const [films,setFilms] = React.useState([]);\r\n    \r\n    useEffect(() => {\r\n        fetch(API_LIST)\r\n        .then((res)=> {\r\n            return res.json()\r\n        })\r\n        .then((film)=>{\r\n            setFilms(film.results)\r\n        })\r\n    },[])\r\n\r\n    return (\r\n        <div className='container'> \r\n        <br/><br/>\r\n        <Link to=\"/search\" > \r\n        <button className=\"btn btn-primary\" id=\"btnr\">\r\n            Recherche des films &nbsp;\r\n            <img src=\"https://www.freeiconspng.com/uploads/search-icon-png-21.png\" width=\"35\" alt=\"Search Free Icon Image\" /> \r\n        </button> </Link>\r\n            <h1> Liste des films populaires  </h1> \r\n              <Table films={films}/>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Affiche","import React from 'react';\r\n\r\nconst TableDetails = (props) => {\r\n    const film = props.film ;\r\n    return (\r\n       \r\n             <div className=\"container\">\r\n           <h2> Les détails du film : {film.title}  </h2>\r\n           <br/>\r\n           <table className=\"table table-bordered\" id=\"details\" >\r\n           <tbody>\r\n            \r\n           <tr>\r\n               <td> image</td>   \r\n               <td> <img src={\"https://image.tmdb.org/t/p/w500/\" + film.backdrop_path } alt={\"\"} />\r\n                </td>\r\n           </tr>\r\n            <tr>\r\n               <td> budget</td>                 \r\n               <td> {film.budget} </td>\r\n           </tr>\r\n           <tr>\r\n               <td> Link</td>                 \r\n               <td> <a href={film.homepage} > {film.homepage} </a></td>\r\n           </tr>\r\n           <tr>\r\n               <td> id</td>                 \r\n               <td> {film.id} </td>\r\n           </tr>\r\n           <tr>\r\n               <td> imdb_id</td>                 \r\n               <td> {film.imdb_id} </td>\r\n           </tr>\r\n           <tr>\r\n               <td> original_language</td>                 \r\n               <td> {film.original_language} </td>\r\n           </tr>\r\n           <tr>\r\n               <td> original_title</td>                 \r\n               <td> {film.original_title} </td>\r\n           </tr>\r\n           <tr>\r\n               <td> overview</td>                 \r\n               <td> {film.overview} </td>\r\n           </tr>\r\n           <tr>\r\n               <td> popularity</td>                 \r\n               <td> {film.popularity} </td>\r\n           </tr>\r\n           <tr>\r\n               <td> Poster</td>                 \r\n               <td>\r\n               <img src={\"https://image.tmdb.org/t/p/w500/\" + film.poster_path} alt={\"Sans poster \"} />\r\n                 \r\n                    </td>\r\n           </tr>\r\n           \r\n           <tr> \r\n               <td> production companies </td>\r\n               <td><ul>\r\n                      \r\n                       {film?.production_companies.map((comp) =>(\r\n                           <li > {comp.name}\r\n                               </li>\r\n                       ))\r\n                       }      \r\n               </ul></td>\r\n           </tr>\r\n           <tr> \r\n               <td> production countries </td>\r\n               <td><ul>\r\n                      \r\n                       {film?.production_countries.map((count) =>(\r\n                           <li> {count.name}\r\n                               </li>\r\n                       ))\r\n                       }      \r\n               </ul></td>\r\n           </tr>\r\n           <tr> \r\n               <td> genres </td>\r\n               <td><ul>\r\n                      \r\n                       {film?.genres.map((genre) =>(\r\n                           <li> {genre.name}\r\n                               </li>\r\n                       ))\r\n                       }      \r\n               </ul></td>\r\n           </tr>\r\n\r\n           <tr>\r\n               <td> release_date</td>                 \r\n               <td> {film.release_date} </td>\r\n           </tr>\r\n           <tr>\r\n               <td> revenue</td>                 \r\n               <td> {film.revenue} </td>\r\n           </tr>\r\n           <tr>\r\n               <td> runtime</td>                 \r\n               <td> {film.runtime} </td>\r\n           </tr>\r\n           <tr> \r\n               <td> Spoken languages </td>\r\n               <td><ul>\r\n                      \r\n                       {film?.spoken_languages.map((lang) =>(\r\n                           <li> {lang.english_name}\r\n                               </li>\r\n                       ))\r\n                       }      \r\n               </ul></td>\r\n           </tr>\r\n           <tr>\r\n               <td> status</td>                 \r\n               <td> {film.status} </td>\r\n           </tr>\r\n           <tr>\r\n               <td> vote_average</td>                 \r\n               <td> {film.vote_average} </td>\r\n           </tr>\r\n           <tr>\r\n               <td> vote_count</td>                 \r\n               <td> {film.vote_count} </td>\r\n           </tr>\r\n           <tr>\r\n               <td> Tagline</td>                 \r\n               <td> {film.tagline} </td>\r\n           </tr>\r\n           </tbody>\r\n           </table>\r\n                        <h2> Bande annonce </h2>\r\n           {\r\n                \r\n                <iframe width=\"560\" height=\"315\" src={'https://www.youtube.com/embed/'+film.video_url}\r\n                frameBorder='50'\r\n                allow='autoplay; encrypted-media'\r\n                allowFullScreen\r\n                title='video'\r\n                />\r\n             \r\n        }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TableDetails;","import React , {useEffect} from \"react\" \r\nimport { Link } from 'react-router-dom';\r\nimport {useParams} from \"react-router-dom\"\r\nimport TableDetails from \"./TableDetails\";\r\nfunction Details(){\r\n    const [film,setFilm] = React.useState(null);\r\n    const {id} = useParams() ;\r\n    const API =\"https://api.themoviedb.org/3/movie/\"+id+\"?api_key=e3e3d29c3d379923c3ef3321c35b73c0&language=fr\" ; \r\n    \r\n    useEffect(() => {\r\n        fetch(API)\r\n        .then((res)=> {\r\n            return res.json()\r\n        })\r\n        .then((f)=>{\r\n                const API_VIDEO = `https://api.themoviedb.org/3/movie/${f.id}/videos?api_key=e3e3d29c3d379923c3ef3321c35b73c0&language=fr`;\r\n                fetch(API_VIDEO)\r\n                .then((res)=> {\r\n                    return res.json()\r\n                }).then((_f)=>{\r\n                    let _film = f;\r\n                    _film.video_url = _f?.results[0]?.key\r\n                    setFilm(_film)\r\n                }).catch( error => { } )\r\n            \r\n        })\r\n    },[API])\r\n    console.log(film);\r\n    if(!film){\r\n        return <h1>Film introuvable</h1>\r\n    }else{\r\n    return (\r\n       <div className=\"container\">\r\n           <br/><br/>\r\n           <Link to=\"/\" > \r\n        <button className=\"btn btn-primary\" id=\"btnr\">\r\n            Page d'accueil &nbsp;\r\n            <img src=\"https://www.freeiconspng.com/uploads/home-page-icon-0.png\" width=\"35\" alt=\"Search Free Icon Image\" /> \r\n        </button> </Link>\r\n           <TableDetails film={film}/>\r\n       \r\n        </div>\r\n\r\n    )}\r\n\r\n}\r\n\r\nexport default Details","import React from 'react';\nimport Search from './components/Search'\nimport Affiche from './components/Affiche'\nimport Details from './components/Details';\nimport './App.css';\nimport {BrowserRouter,Route} from \"react-router-dom\"\nfunction App() {\n  return (\n    <div className=\"App\">\n     <BrowserRouter>\n        <Route  exact path=\"/\" component={Affiche} />\n        <Route exact path=\"/search\" component={Search} />\n        <Route exact path=\"/details/:id\" component={Details} />\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}