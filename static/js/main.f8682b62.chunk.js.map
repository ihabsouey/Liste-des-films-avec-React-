{"version":3,"sources":["components/Table.js","components/Search.js","components/Affiche.js","components/TableDetails.js","components/Details.js","App.js","reportWebVitals.js","index.js"],"names":["Table","props","films","className","map","film","title","class","src","backdrop_path","alt","to","id","Search","useState","query","setQuery","setFilms","API","React","useEffect","fetch","then","res","json","f","results","width","type","value","onChange","e","target","Affiche","TableDetails","budget","href","homepage","imdb_id","original_language","original_title","overview","popularity","poster_path","production_companies","comp","name","production_countries","count","genres","genre","release_date","revenue","runtime","spoken_languages","lang","english_name","status","vote_average","vote_count","tagline","height","video_url","frameBorder","allow","allowFullScreen","Details","setFilm","useParams","API_VIDEO","_f","_film","key","catch","error","console","log","App","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f8682b62.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Table = (props) => {\r\n    const films = props.films ;\r\n    return (\r\n       \r\n          \r\n                     <div className=\"container2\">        \r\n                    {films.map((film) => (\r\n                        ( film.title && ( \r\n                            <article class=\"film-card\">\r\n                        \r\n                         \r\n                            <img className=\"film-image\" src={\"https://image.tmdb.org/t/p/w500/\" + film.backdrop_path } alt={film.title} /> \r\n                            <br/><br/>\r\n                            <h4 className=\"film-title\"> {film.title}</h4>  \r\n                                   <Link to={\"/Liste-des-films-avec-React-/details/\"+film.id} >\r\n                                       <button className=\"btn btn-primary film-text\" >Voire plus d√©tails</button> </Link>  \r\n                                       </article>   \r\n                          ))  \r\n                    ))}\r\n                    </div>\r\n                 \r\n        \r\n        \r\n    );\r\n};\r\n\r\nexport default Table;","import React, { useState } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport Table from \"../components/Table\"\r\nfunction Search() {\r\n    const [query,setQuery] = useState('')\r\n    const [films,setFilms] = useState([])\r\n    const API = `https://api.themoviedb.org/3/search/multi?api_key=e3e3d29c3d379923c3ef3321c35b73c0&language=fr&query=${query}&page=1&include_adult=false`\r\n    React.useEffect(() => {\r\n        fetch(API)\r\n        .then((res)=> {\r\n            return res.json()\r\n        })\r\n        .then((f)=>{\r\n            setFilms(f.results)\r\n        })\r\n    },[API,query])\r\n\r\n    \r\n    return (\r\n        <div className=\"container\">\r\n           <br/><br/>\r\n          \r\n            <Link to=\"/Liste-des-films-avec-React-/\" > \r\n                    <button className=\"btn btn-primary\" id=\"btnr\">\r\n                    \r\n                    <img src=\"https://www.freeiconspng.com/uploads/home-page-icon-0.png\" width=\"35\" alt=\"Search Free Icon Image\" /> \r\n                    </button>\r\n                </Link>\r\n              \r\n                <div className=\"ss\">  <br/>\r\n                    <div class=\"input-group input-group-sm mb-3\" >\r\n                        <div class=\"input-group-prepend\">\r\n                        <span class=\"input-group-text btn btn-secondary\" id=\"inputGroup-sizing-sm\"> Tapez le nom du film :</span>\r\n                        </div>\r\n                        <input type=\"text\" class=\"form-control\" aria-label=\"Small\" aria-describedby=\"inputGroup-sizing-sm\"  value={query} onChange={(e)=>setQuery(e.target.value)}/>\r\n                    </div> \r\n                    </div>\r\n             \r\n                <br/> <br/>\r\n                { films && \r\n                 \r\n                    <Table films={films}/>\r\n                \r\n                }\r\n                 { !films && \r\n                \r\n                     <h2> Loading ... </h2>\r\n              \r\n                }\r\n           \r\n           \r\n        </div>\r\n\r\n    )\r\n}\r\nexport default Search\r\n","import React, { useEffect } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport Table from \"../components/Table\"\r\n\r\nimport '../App.css';\r\nimport \"../../node_modules/bootstrap/dist/css/bootstrap.min.css\";\r\n \r\nfunction Affiche () {\r\n    const API_LIST = 'https://api.themoviedb.org/3/movie/popular?api_key=e3e3d29c3d379923c3ef3321c35b73c0&language=fr&page=1'\r\n    const [films,setFilms] = React.useState([]);\r\n    \r\n    useEffect(() => {\r\n        fetch(API_LIST)\r\n        .then((res)=> {\r\n            return res.json()\r\n        })\r\n        .then((film)=>{\r\n            setFilms(film.results)\r\n        })\r\n    },[])\r\n\r\n    return (\r\n        <div className='container'> \r\n        <br/><br/>\r\n        <Link to=\"/Liste-des-films-avec-React-/search\" > \r\n        <button className=\"btn btn-primary\" id=\"btnr\">\r\n            Recherche des films &nbsp;\r\n            <img src=\"https://www.freeiconspng.com/uploads/search-icon-png-21.png\" width=\"35\" alt=\"Search Free Icon Image\" /> \r\n        </button> </Link> <br/> <br/> <br/>\r\n            <h1> Liste des films populaires  </h1><br/> \r\n              <Table films={films}/>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Affiche","import React from 'react';\r\n\r\nconst TableDetails = (props) => {\r\n    const film = props.film ;\r\n    return (\r\n       \r\n             <div className=\"container\"><br/>\r\n             <br/><br/>\r\n           <h2> Les d√©tails du film : {film.title}  </h2>\r\n           <br/>\r\n           <table className=\"table table-bordered\" id=\"details\" >\r\n           <tbody>\r\n            \r\n           <tr>\r\n               <td> image</td>   \r\n               <td> <img src={\"https://image.tmdb.org/t/p/w500/\" + film.backdrop_path } alt={\"\"} />\r\n                </td>\r\n           </tr>\r\n            <tr>\r\n               <td> budget</td>                 \r\n               <td> {film.budget} </td>\r\n           </tr>\r\n           <tr>\r\n               <td> Link</td>                 \r\n               <td> <a href={film.homepage} > {film.homepage} </a></td>\r\n           </tr>\r\n           <tr>\r\n               <td> id</td>                 \r\n               <td> {film.id} </td>\r\n           </tr>\r\n           <tr>\r\n               <td> imdb_id</td>                 \r\n               <td> {film.imdb_id} </td>\r\n           </tr>\r\n           <tr>\r\n               <td> original_language</td>                 \r\n               <td> {film.original_language} </td>\r\n           </tr>\r\n           <tr>\r\n               <td> original_title</td>                 \r\n               <td> {film.original_title} </td>\r\n           </tr>\r\n           <tr>\r\n               <td> overview</td>                 \r\n               <td> {film.overview} </td>\r\n           </tr>\r\n           <tr>\r\n               <td> popularity</td>                 \r\n               <td> {film.popularity} </td>\r\n           </tr>\r\n           <tr>\r\n               <td> Poster</td>                 \r\n               <td>\r\n               <img src={\"https://image.tmdb.org/t/p/w500/\" + film.poster_path} alt={\"Sans poster \"} />\r\n                 \r\n                    </td>\r\n           </tr>\r\n           \r\n           <tr> \r\n               <td> production companies </td>\r\n               <td><ul>\r\n                      \r\n                       {film?.production_companies.map((comp) =>(\r\n                           <li > {comp.name}\r\n                               </li>\r\n                       ))\r\n                       }      \r\n               </ul></td>\r\n           </tr>\r\n           <tr> \r\n               <td> production countries </td>\r\n               <td><ul>\r\n                      \r\n                       {film?.production_countries.map((count) =>(\r\n                           <li> {count.name}\r\n                               </li>\r\n                       ))\r\n                       }      \r\n               </ul></td>\r\n           </tr>\r\n           <tr> \r\n               <td> genres </td>\r\n               <td><ul>\r\n                      \r\n                       {film?.genres.map((genre) =>(\r\n                           <li> {genre.name}\r\n                               </li>\r\n                       ))\r\n                       }      \r\n               </ul></td>\r\n           </tr>\r\n\r\n           <tr>\r\n               <td> release_date</td>                 \r\n               <td> {film.release_date} </td>\r\n           </tr>\r\n           <tr>\r\n               <td> revenue</td>                 \r\n               <td> {film.revenue} </td>\r\n           </tr>\r\n           <tr>\r\n               <td> runtime</td>                 \r\n               <td> {film.runtime} </td>\r\n           </tr>\r\n           <tr> \r\n               <td> Spoken languages </td>\r\n               <td><ul>\r\n                      \r\n                       {film?.spoken_languages.map((lang) =>(\r\n                           <li> {lang.english_name}\r\n                               </li>\r\n                       ))\r\n                       }      \r\n               </ul></td>\r\n           </tr>\r\n           <tr>\r\n               <td> status</td>                 \r\n               <td> {film.status} </td>\r\n           </tr>\r\n           <tr>\r\n               <td> vote_average</td>                 \r\n               <td> {film.vote_average} </td>\r\n           </tr>\r\n           <tr>\r\n               <td> vote_count</td>                 \r\n               <td> {film.vote_count} </td>\r\n           </tr>\r\n           <tr>\r\n               <td> Tagline</td>                 \r\n               <td> {film.tagline} </td>\r\n           </tr>\r\n           </tbody>\r\n           </table>\r\n                        <h2> Bande annonce </h2>\r\n           {\r\n                \r\n                <iframe width=\"560\" height=\"315\" src={'https://www.youtube.com/embed/'+film.video_url}\r\n                frameBorder='50'\r\n                allow='autoplay; encrypted-media'\r\n                allowFullScreen\r\n                title='video'\r\n                />\r\n             \r\n        }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TableDetails;","import React , {useEffect} from \"react\" \r\nimport { Link } from 'react-router-dom';\r\nimport {useParams} from \"react-router-dom\"\r\nimport TableDetails from \"./TableDetails\";\r\nfunction Details(){\r\n    const [film,setFilm] = React.useState(null);\r\n    const {id} = useParams() ;\r\n    const API =\"https://api.themoviedb.org/3/movie/\"+id+\"?api_key=e3e3d29c3d379923c3ef3321c35b73c0&language=fr\" ; \r\n    \r\n    useEffect(() => {\r\n        fetch(API)\r\n        .then((res)=> {\r\n            return res.json()\r\n        })\r\n        .then((f)=>{\r\n                const API_VIDEO = `https://api.themoviedb.org/3/movie/${f.id}/videos?api_key=e3e3d29c3d379923c3ef3321c35b73c0&language=fr`;\r\n                fetch(API_VIDEO)\r\n                .then((res)=> {\r\n                    return res.json()\r\n                }).then((_f)=>{\r\n                    let _film = f;\r\n                    _film.video_url = _f?.results[0]?.key\r\n                    setFilm(_film)\r\n                }).catch( error => { } )\r\n            \r\n        })\r\n    },[API])\r\n    console.log(film);\r\n    if(film){\r\n        return (\r\n            <div className=\"container\">\r\n                <br/><br/>\r\n                <Link to=\"/Liste-des-films-avec-React-/\" > \r\n             <button className=\"btn btn-primary\" id=\"btnr\">\r\n                 Page d'accueil &nbsp;\r\n                 <img src=\"https://www.freeiconspng.com/uploads/home-page-icon-0.png\" width=\"35\" alt=\"Search Free Icon Image\" /> \r\n             </button> </Link>\r\n                <TableDetails film={film}/>\r\n            \r\n             </div>\r\n     \r\n         )}\r\n       \r\n     else{ return <h1>Film introuvable</h1> }\r\n   \r\n\r\n}\r\n\r\nexport default Details","import React from 'react';\nimport Search from './components/Search'\nimport Affiche from './components/Affiche'\nimport Details from './components/Details';\nimport './App.css';\nimport {BrowserRouter,Route} from \"react-router-dom\"\nfunction App() {\n  return (\n    <div className=\"App\">\n     \n     \n      <BrowserRouter>\n         <Route exact path=\"/Liste-des-films-avec-React-/\" component={Affiche} />\n        <Route exact path=\"/search\" component={Search} />\n         <Route exact path=\"/Liste-des-films-avec-React-/search\" component={Search} />\n        <Route exact path=\"/details/:id\" component={Details} />\n        <Route exact path=\"/Liste-des-films-avec-React-/details/:id\" component={Details} />\n      </BrowserRouter> \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n     <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}